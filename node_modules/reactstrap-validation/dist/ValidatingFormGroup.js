"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var fp_1 = require("lodash/fp");
var React = require("react");
var reactstrap_1 = require("reactstrap");
var Validation_1 = require("./Validation");
var ValidatingFormGroup = /** @class */ (function (_super) {
    __extends(ValidatingFormGroup, _super);
    function ValidatingFormGroup(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {};
        _this.enhance = _this.enhance.bind(_this);
        _this.reference = _this.reference.bind(_this);
        _this.isValid = _this.isValid.bind(_this);
        _this.handle = _this.handle.bind(_this);
        return _this;
    }
    ValidatingFormGroup.prototype.componentWillReceiveProps = function (nextProps) {
        if (nextProps.valid !== this.props.valid) {
            this.setState({ valid: undefined });
            if (typeof this.props.onStateChange === 'function') {
                this.props.onStateChange(__assign({}, this.state, { valid: undefined }));
            }
        }
    };
    ValidatingFormGroup.prototype.enhance = function (element, index) {
        var trigger = this.props.trigger;
        switch (element.type) {
            case reactstrap_1.Input:
                return React.cloneElement(element, {
                    innerRef: this.reference,
                    valid: this.isValid(),
                    onChange: this.handle(element.props.onChange, 'change'),
                    onBlur: this.handle(element.props.onBlur, 'blur'),
                    key: index
                });
            default:
                return element;
        }
    };
    ValidatingFormGroup.prototype.reference = function (ref) {
        return ref && this.state.ref !== ref && this.setState({ ref: ref });
    };
    ValidatingFormGroup.prototype.isValid = function () {
        return this.state.valid === undefined ? this.props.valid : this.state.valid;
    };
    ValidatingFormGroup.prototype.handle = function (innerHandle, trigger) {
        var _this = this;
        return function (e) {
            if (typeof innerHandle === 'function')
                innerHandle(e);
            if ((_this.props.trigger || 'blur') === trigger) {
                var newState = Validation_1.validate(_this.state);
                _this.setState(newState);
                if (typeof _this.props.onStateChange === 'function') {
                    _this.props.onStateChange(newState);
                }
            }
        };
    };
    ValidatingFormGroup.prototype.render = function () {
        var children = this.props.children;
        var props = fp_1.omit(['trigger', 'state', 'onStateChange'], this.props);
        React;
        return React.createElement(reactstrap_1.FormGroup, __assign({}, props), children.map(this.enhance));
    };
    return ValidatingFormGroup;
}(React.Component));
exports.ValidatingFormGroup = ValidatingFormGroup;
